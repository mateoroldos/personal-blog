---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";
import { formatDate } from "../../lib/date";
// import type { ImageMetadata } from "astro";

// const heroImages = import.meta.glob<{ default: ImageMetadata }>(
//   "/src/assets/images/*.{jpeg,jpg,png,gif,webp}"
// );

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"blog">;
};

const {
  post,
  post: {
    data: { title, description, date, isDraft, heroImage },
  },
} = Astro.props;
const slug = post.slug;
const { Content } = await post.render();

// Construct the path to the hero image
const heroImagePath = heroImage ? `/src/assets/images/${heroImage}` : undefined;
---

<Base {title} description={description} image={heroImagePath}>
  <div class="prose">
    {
      isDraft && (
        <blockquote class="my-8 bg-gray-800 py-4 pl-4" role="alert">
          This post is a <strong>draft</strong>. If you're reading this, you're
          probably a cool and trusted person. Please{" "}
          <strong>don't share</strong> it thank you.
        </blockquote>
      )
    }

    <!-- {
      heroImagePath && heroImages[heroImagePath] && (
        <Image
          src={heroImages[heroImagePath]()}
          alt={`Hero image for ${title}`}
          width={1200}
          height={600}
          class="h-full w-full border border-gray-500 object-cover"
          transition:name={`hero-${slug}`}
        />
      )
    } -->
    <h1 class="!mb-0 !mt-16" transition:name={slug}>{title}</h1>
    <p class="!mt-0 pb-6 text-gray-400">{formatDate(date)}</p>
    <Content />
  </div>
</Base>
